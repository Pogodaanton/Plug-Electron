{
  "name": "Plug-electron",
  "tagline": "Use Plug.dj more as a music player and less than a website.",
  "body": "#:tada: Release: 1.0.1\r\n*[Download it here!](https://github.com/Pogodaanton/Plug-Electron/releases)*\r\n\r\n#About\r\nThis is a web-wrapper of [plug.dj](http://plug.dj), so you can use it more like a music player and less like a website.\r\n\r\nUntil now there is the basic app and only small additional features like:\r\n* MPRIS support (Music Player controls for Linux)\r\n* Script manager (So you can load your favourite scripts to plug.dj)\r\n\r\nFor creating a connection between plug.dj and the client I created [a script](https://github.com/Pogodaanton/PlugAssist), which is being implemented to the site at the start of Plug-Electron.\r\n\r\n#For Requests, Bug Reports, etc.\r\nPlease head over to [the issues site](https://github.com/Pogodaanton/Plug-Electron/issues)\r\n\r\n#Developers, ahoi\r\nI always appreciate if you contribute on this project. I tried to make the most user-friendly workspace setup I ever made, however there are still some catches.\r\n\r\n* You can install all depencies via `npm install`\r\n* Next step is to rebuild *mpris-service* for electron. Do that by typing in `npm run rebuild`.\r\n* **Note:** If you want to tinker with [PlugAssist](https://github.com/Pogodaanton/PlugAssist), you have to upload the file to a web-server, as the <webview/> may not load local files. Additionally the url has to start with `https://`.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}